@model UpdateFooterAddressDto

@{
    ViewData["Title"] = "UpdateFooterAddress";
    Layout = "~/Views/AdminLayout/Index.cshtml";
}

<div class="page-content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">New Address Information Entry</h4>
                        <p class="card-subtitle mb-4">You can enter the information for the address area from the panel below. Please only make 1 data entry to maintain theme integrity. If you already have data, please edit it. If you make a new data entry, delete the previous one.</p>
                        <form method="post" onsubmit="return validatePhoneNumber()">
                            <input type="hidden" asp-for="FooterAddressID" />
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label for="Address">Address</label>
                                <input type="text" class="form-control" id="Address" asp-for="Address">
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="Description">Description</label>
                                <input type="text" class="form-control" id="Description" asp-for="Description">
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="Phone">Phone Number</label>
                                <input type="text" class="form-control" id="Phone" asp-for="Phone" placeholder="530 123 45 67" onfocus="setDefaultPhone(this)" oninput="formatPhoneNumber(this)">
                                <span asp-validation-for="Phone" class="text-danger" id="phoneError"></span>
                            </div>
                            <div class="form-group">
                                <label for="Email">Email Address</label>
                                <input type="email" class="form-control" id="Email" asp-for="Email">
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            <button type="submit" class="btn btn-primary waves-effect waves-light">Save Address</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function setDefaultPhone(input) {
        // Eğer input boşsa +90 ekle
        if (input.value.trim() === "") {
            input.value = "+90 ";
        }
        // İmleci sonuna yerleştir
        input.setSelectionRange(input.value.length, input.value.length);
    }

    function formatPhoneNumber(input) {
        // Giriş alanındaki tüm karakterleri temizle
        let value = input.value.replace(/\D/g, '');

        // +90 ile başlıyorsa sadece rakamları al
        if (value.startsWith('90')) {
            value = value.slice(2); // +90'ı kaldır
        } else if (value.startsWith('5')) {
            value = '90 ' + value; // 5 ile başlayan bir numara ise +90 ekle
        }

        // Formatla ve +90'ı ekle
        if (value.length > 0) {
            // Telefon numarasını 3-3-2-2 formatına göre ayır
            let formatted = `+90 `;
            if (value.length > 3) {
                formatted += value.substring(0, 3) + ' ';
                if (value.length > 6) {
                    formatted += value.substring(3, 6) + ' ';
                    if (value.length > 8) {
                        formatted += value.substring(6, 8) + ' ';
                        formatted += value.substring(8, 10); // Son 2 karakter
                    } else {
                        formatted += value.substring(6); // Kalan kısmı ekle
                    }
                } else {
                    formatted += value.substring(3); // Kalan kısmı ekle
                }
            } else {
                formatted += value; // Başka bir şey yoksa tamamı
            }
            input.value = formatted;
        } else {
            input.value = '+90 '; // Eğer boşsa, +90'ı ayarlayın
        }

        // İmleci sonuna yerleştir
        input.setSelectionRange(input.value.length, input.value.length);
    }

    function validatePhoneNumber() {
        const phoneInput = document.getElementById('Phone');
        const phoneError = document.getElementById('phoneError');
        const regex = /^\+90 (5(0[5-7]|[3-5]\d) \d{3} \d{2} \d{2})$/;

        if (!regex.test(phoneInput.value)) {
            phoneError.textContent = "Invalid phone number format. Please use: +90 530 123 45 67";
            return false; // Form gönderimini engelle
        } else {
            phoneError.textContent = ""; // Hata mesajını temizle
            return true; // Form gönderimini izin ver
        }
    }
</script>
