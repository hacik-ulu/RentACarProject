@model CreateFooterAddressDto

@{
    ViewData["Title"] = "CreateFooterAddress";
    Layout = "~/Views/AdminLayout/Index.cshtml";
}

<div class="page-content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-12">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">New Address Information Entry</h4>
                        <p class="card-subtitle mb-4">You can enter the information for the address area from the panel below. Please only make 1 data entry to maintain theme integrity. If you already have data, please edit it. If you make a new data entry, delete the previous one.</p>
                        <form method="post" onsubmit="return validatePhoneNumber()">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label for="Address">Address</label>
                                <input type="text" class="form-control" id="Address" asp-for="Address" oninput="this.value = this.value.replace(/[^a-zA-ZçÇğĞıİöÖşŞüÜ\s]/g, '')">
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="Description">Description</label>
                                <input type="text" class="form-control" id="Description" asp-for="Description" oninput="this.value = this.value.replace(/[^a-zA-ZçÇğĞıİöÖşŞüÜ\s]/g, '')">
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="Phone">Phone Number</label>
                                <input type="text" class="form-control" id="Phone" asp-for="Phone" onfocus="addCountryCode(this)" oninput="formatPhoneNumber(this)" placeholder="530 123 45 67">
                                <span asp-validation-for="Phone" class="text-danger" id="phoneError"></span>
                            </div>
                            <div class="form-group">
                                <label for="Email">Email Address</label>
                                <input type="email" class="form-control" id="Email" asp-for="Email">
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            <button type="submit" class="btn btn-primary waves-effect waves-light">Save Address</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function addCountryCode(input) {
        // Eğer input boşsa ve başında +90 yoksa ekleyin
        if (input.value.trim() === "") {
            input.value = "+90 ";
        }
    }

    function phoneNumberFormatView(phoneNumberString) {
        let cleaned = ('' + phoneNumberString).replace(/\D/g, '');
        let match = cleaned.match(/^(\d{3})(\d{3})(\d{2})(\d{2})$/);
        if (match) {
            return `+90 ${match[1]} ${match[2]} ${match[3]} ${match[4]}`;
        }
        return null;
    }

    function formatPhoneNumber(input) {
        // Başındaki +90'ı koruyarak, temizlenmiş değeri formatla
        if (input.value.startsWith('+90')) {
            let formattedNumber = phoneNumberFormatView(input.value.replace('+90 ', '')); // +90'ı kaldırıp düzenle
            if (formattedNumber) {
                input.value = formattedNumber; // Güncellenmiş numarayı input'a yaz
            }
        } else {
            input.value = input.value.replace(/\D/g, ''); // Geçersiz ise sadece rakamları bırak
        }
    }

    function validatePhoneNumber() {
        const phoneInput = document.getElementById('Phone');
        const phoneError = document.getElementById('phoneError');
        const regex = /^\+90 (5(0[5-7]|[3-5]\d) \d{3} \d{2} \d{2})$/;

        if (!regex.test(phoneInput.value)) {
            phoneError.textContent = "Invalid phone number format. Please use: +90 530 123 45 67";
            return false; // Form gönderimini engelle
        } else {
            phoneError.textContent = ""; // Hata mesajını temizle
            return true; // Form gönderimini izin ver
        }
    }
</script>
