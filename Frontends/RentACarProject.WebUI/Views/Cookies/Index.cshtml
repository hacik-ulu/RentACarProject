@model List<string>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/UILayout/Index.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <style>
        #policy-container {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .policy-item {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 15px;
            margin: 10px 0;
            width: 100%;
            cursor: pointer;
            background-color: #f9f9f9;
            transition: background-color 0.3s;
            color: black;
        }

            .policy-item:hover {
                background-color: #e9e9e9;
            }

        .policy-answer {
            display: none;
            margin-top: 10px;
            color: black;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        th, td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <div id="policy-container">
        @for (int i = 0; i < Model.Count; i += 2)
        {
            <div class="policy-item" onclick="toggleAnswer(@i)">
                <strong>@Model[i]</strong>
                <div class="policy-answer" id="answer-@i">
                    @Html.Raw(Model[i + 1])
                </div>
            </div>
        }
    </div>

    <script>
        function toggleAnswer(index) {
            var answer = document.getElementById('answer-' + index);
            if (answer.style.display === "none" || answer.style.display === "") {
                answer.style.display = "block";
            } else {
                answer.style.display = "none";
            }
        }
    </script>
</body>
</html>

