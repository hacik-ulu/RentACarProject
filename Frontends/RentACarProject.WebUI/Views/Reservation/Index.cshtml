@model CreateReservationDto

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/UILayout/Index.cshtml";
}

<div class="container mt-5 mb-5">
    <div id="reservation-success" class="alert alert-success mt-3" style="display: none;" role="alert">
        Reservation successfully completed!
    </div>
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card shadow-lg">
                <div class="card-header bg-gray text-white text-center">
                    <h3 class="mb-0">Car Reservation Form</h3>
                </div>
                <div class="card-body p-5">
                    <div class="alert alert-info mb-4" role="alert">
                        <strong>To inform:</strong>
                        <ul>
                            <li>Follow the notifications sent to your e-mail address to learn about your reservation result.</li>
                            <li>In case of reservation rejection, please contact us via e-mail or call.</li>
                        </ul>
                    </div>

                    <form method="post" class="needs-validation" novalidate>
                        <input type="hidden" asp-for="CarID" value="@ViewBag.v3" class="form-control">
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="Name">Name</label>
                                <input type="text" asp-for="Name" class="form-control" placeholder="Your Name" required>
                                <div class="invalid-feedback">Please enter your name.</div>
                            </div>
                            <div class="form-group col-md-6">
                                <label for="Surname">Surname</label>
                                <input type="text" asp-for="Surname" class="form-control" placeholder="Your Surname" required>
                                <div class="invalid-feedback">Please enter your surname.</div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="Email">Email Address</label>
                                <input type="email" asp-for="Email" class="form-control" placeholder="Your Email" required>
                                <div class="invalid-feedback">Please enter a valid email address.</div>
                            </div>
                            <div class="form-group col-md-6">
                                <label for="Phone">Phone Number</label>
                                <input type="text" class="form-control" id="Phone" asp-for="Phone" onfocus="addCountryCode(this)" oninput="formatPhoneNumber(this)" placeholder="530 123 45 67">
                                <span asp-validation-for="Phone" class="text-danger" id="phoneError"></span>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="PickUpLocationID">Pick Up Location</label>
                                @Html.DropDownListFor(x => x.PickUpLocationID, (List<SelectListItem>)ViewBag.v, new { @class = "form-control", required = "required" })
                                <div class="invalid-feedback">Please select a pick up location.</div>
                            </div>
                            <div class="form-group col-md-6">
                                <label for="DropOffLocationID">Drop Off Location</label>
                                @Html.DropDownListFor(x => x.DropOffLocationID, (List<SelectListItem>)ViewBag.v, new { @class = "form-control", required = "required" })
                                <div class="invalid-feedback">Please select a drop off location.</div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="Age">Age</label>
                                <input type="number" asp-for="Age" class="form-control" placeholder="Your Age" required min="20">
                                <div class="invalid-feedback">You must be at least 20 years old to rent a car.</div>
                            </div>
                            <div class="form-group col-md-6">
                                <label for="DriverLicenseYear">Driver License Year</label>
                                <input type="number" asp-for="DriverLicenseYear" class="form-control" placeholder="Years of Driver's License" required min="2" max="50">
                                <div class="invalid-feedback">Please enter a valid number of years (2 to 50) for your driver's license.</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Description">Your Requests</label>
                            <textarea asp-for="Description" id="Description" cols="50" rows="10" class="form-control" placeholder="Any Additional Requests"></textarea>
                        </div>
                        <br />
                        <div class="form-group text-center mt-4">
                            <button type="submit" class="btn btn-primary btn-lg btn-block">Complete Reservation</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    var ageInput = form.querySelector('input[name="Age"]');
                    var driverLicenseYearInput = form.querySelector('input[name="DriverLicenseYear"]');
                    var experience = driverLicenseYearInput.value;

                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    } else if (ageInput.value < 20) {
                        event.preventDefault();
                        event.stopPropagation();
                        ageInput.setCustomValidity("You must be at least 20 years old to rent a car.");
                    } else if (experience < 2) {
                        event.preventDefault();
                        event.stopPropagation();
                        driverLicenseYearInput.setCustomValidity("You cannot rent a car with less than 2 years of driving experience. You are considered a trainee driver.");
                    } else if (experience > 50) {
                        event.preventDefault();
                        event.stopPropagation();
                        driverLicenseYearInput.setCustomValidity("You cannot rent a car with more than 50 years of driving experience.");
                    } else {
                        ageInput.setCustomValidity("");
                        driverLicenseYearInput.setCustomValidity("");
                        document.getElementById('reservation-success').style.display = 'block';
                        setTimeout(function () {
                            document.getElementById('reservation-success').style.display = 'none';
                        }, 5000);
                    }

                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>

<script>
    function addCountryCode(input) {
        if (input.value.trim() === "") {
            input.value = "+90 ";
        }
    }

    function phoneNumberFormatView(phoneNumberString) {
        let cleaned = ('' + phoneNumberString).replace(/\D/g, '');
        let match = cleaned.match(/^(\d{3})(\d{3})(\d{2})(\d{2})$/);
        if (match) {
            return `+90 ${match[1]} ${match[2]} ${match[3]} ${match[4]}`;
        }
        return null;
    }

    function formatPhoneNumber(input) {
        if (input.value.startsWith('+90')) {
            let formattedNumber = phoneNumberFormatView(input.value.replace('+90 ', '')); 
            if (formattedNumber) {
                input.value = formattedNumber; 
            }
        } else {
            input.value = input.value.replace(/\D/g, ''); 
        }
    }

    function validatePhoneNumber() {
        const phoneInput = document.getElementById('Phone');
        const phoneError = document.getElementById('phoneError');
        const regex = /^\+90 (5(0[5-7]|[3-5]\d) \d{3} \d{2} \d{2})$/;

        if (!regex.test(phoneInput.value)) {
            phoneError.textContent = "Invalid phone number format. Please use: +90 530 123 45 67";
            return false; 
        } else {
            phoneError.textContent = ""; 
            return true; 
        }
    }
</script>

